<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" language="C#" hostspecific="True"#>
<#@ output extension=".java" #>
<#@ RGRLLCAMSProyectoMDD processor="RGRLLCAMSProyectoMDDDirectiveProcessor" requires="fileName='Sample.RGRLLCAMSProyectoMDD'" #>
<#@ include file="EF.utility.CS.ttinclude" #>
 
<#
	var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
	fileManager.StartNewFile("Application.java");
	createMain();
	foreach(Window window in this.Tapiz.Window)
	{
		if (window is MainWindow)
		{
			fileManager.StartNewFile("Frame" + window.Name + ".java");
			setClassHeader(window.Name, "Frame");
			foreach(Window sWindow in ((MainWindow)window).SecondaryWindow)
				declareWindow(sWindow.Name);
			foreach(Button button in window.Button)
			{
				if (String.Equals(button.Title, "Anterior") && button.id == 0)
					declareFrame(button.Type);
				else if (String.Equals(button.Title, "Anterior"))
					declareWindow(button.Type);
			}
			WriteLine("");
			foreach(Menu menu in window.Menu)
				foreach(Item item in menu.Item)
					declareItem(item.Name, "MenuItem");
			WriteLine("");
			foreach(Button button in window.Button)
				declareButton(button);
			WriteLine("");
			constructor(window.Name, "Frame", window);
			setActionPerformed(window);
			WriteLine("}");
		}
		else
		{
			fileManager.StartNewFile("Dialog" + window.Name + ".java");
			setClassHeader(window.Name, "Dialog");
			foreach(Window sWindow in ((SecondaryWindow)window).TargetSecondaryWindow)
				declareWindow(sWindow.Name);
			foreach(Button button in window.Button)
			{
				if (String.Equals(button.Title, "Anterior") && button.id == 0)
					declareFrame(button.Type);
				else if (String.Equals(button.Title, "Anterior"))
					declareWindow(button.Type);

			}
			WriteLine("");
			foreach(Menu menu in window.Menu)
				foreach(Item item in menu.Item)
					declareItem(item.Name, "Button");
			WriteLine("");
			foreach(Button button in window.Button)
				declareButton(button);
			WriteLine("");
			constructor(window.Name, "Dialog", window);
			setActionPerformed(window);
			WriteLine("}");
		}
	}
	fileManager.Process();
#>

<#+
	private void	createMain()
	{
		WriteLine(
			"public class \t Application\n{\n" +
			"\tpublic static void main (String[] args)\n\t{\n" +
			"\t\tnew FrameCINESIA();\n" +
			"\t}\n}\n"
		);
	}
#>

<#+
	private void	setClassHeader(string name, string type)
	{
		WriteLine("import java.awt.*;\n" +
			"import java.awt.event.*;\n\n" +
			"public class\t" + type + name + " extends " + type + " implements ActionListener\n{\n"
			);
	}
#>

<#+
	private	void	declareFrame(string name)
	{
		WriteLine("\tprivate Frame" + name + "\tframe" + name + ";");
	}
#>

<#+
	private	void	declareWindow(string name)
	{
		WriteLine("\tprivate Dialog" + name + "\twindow" + name + ";");
	}
#>

<#+
	private	void	declareItem(string name, string type)
	{
		WriteLine("\tprivate " + type + "\t\titem" + name + ";");
	}
#>

<#+
	private	void	declareButton(Button button)
	{
		WriteLine("\tprivate Button\t\tbutton" + button.Title + ";");
	}
#>

<#+
	private void	constructor(string name, string type, Window window)
	{
		bool modal;

		modal = true;
		Write("\tpublic " + type + name + "(");
		if (String.Equals(type, "Dialog"))
			Write("Frame parent, boolean modal");
		WriteLine(")\n\t{");
		Write("\t\tsuper(");
		if (String.Equals(type, "Dialog"))
			Write("parent, \"" + type + name + "\", modal");
		WriteLine(");\n");
		WriteLine("\t\tthis.setTitle(\"" + type + name + "\");\n");
		if (window is MainWindow)
			foreach(Window sWindow in ((MainWindow)window).SecondaryWindow)
			{
				if (modal)
				{
					WriteLine("\t\twindow" + sWindow.Name + " = new Dialog" + sWindow.Name + "(this, true);");
					modal = false;
				}
				else
					WriteLine("\t\twindow" + sWindow.Name + " = new Dialog" + sWindow.Name + "(this, false);");
			}
		else
			foreach(Window sWindow in ((SecondaryWindow)window).TargetSecondaryWindow)
			{
				if (modal)
				{
					WriteLine("\t\twindow" + sWindow.Name + " = new Dialog" + sWindow.Name + "(parent, true);");
					modal = false;
				}
				else
					WriteLine("\t\twindow" + sWindow.Name + " = new Dialog" + sWindow.Name + "(parent, false);");
			}
		foreach(Button button in window.Button)
		{
			if (String.Equals(button.Title, "Anterior") && button.id == 0)
				WriteLine("\t\tframe" + button.Type + " = new Frame" + button.Type + "();");	
			else if (String.Equals(button.Title, "Anterior"))
			{
				if (modal)
				{
					WriteLine("\t\twindow" + button.Type + " = new Dialog" + button.Type + "(parent, true);");
					modal = false;
				}
				else
					WriteLine("\t\twindow" + button.Type + " = new Dialog" + button.Type + "(parent, false);");
			}
		}
		WriteLine("\n\t\tthis.setLayout(new FlowLayout());\n");
		if (String.Equals(type, "Frame"))
		{
			WriteLine("\t\tMenuBar MB = new MenuBar();\n\t\tthis.setMenuBar(MB);\n");
			foreach(Menu menu in window.Menu)
			{
				createMenu(menu);
				WriteLine("\t\tMB.add(menu" + menu.Name + ");\n");
			}
		}
		else
			foreach(Menu menu in window.Menu)
				foreach(Item item in menu.Item)
					createButton(item);
		WriteLine("");
		foreach(Button button in window.Button)
			createButton(button);
		WriteLine("");
		foreach(Button button in window.Button)
			actionButton(button);
		foreach(Menu menu in window.Menu)
			foreach(Item item in menu.Item)
				actionItem(item);
		WriteLine("");
		WriteLine("\n\t\tthis.setSize(" + window.SizeX + ", " + window.SizeY + ");\n\t\tthis.setVisible(true);\n\t}\n");
	}
#>

<#+
	private void	createMenu(Menu menu)
	{
		WriteLine("\t\tMenu menu" + menu.Name + " = new Menu(\"" + menu.Name + "\");");
		foreach(Item item in menu.Item)
		{
			WriteLine("\t\titem" + item.Name + " = new MenuItem(\"" + item.Name +"\");");
			WriteLine("\t\tmenu" + menu.Name + ".add(item" + item.Name + ");");
		}
	}
#>

<#+
	private void	createButton(Item button)
	{
		WriteLine("\t\titem" + button.Name + " = new Button(\"" + button.Name + "\");");
		WriteLine("\t\tthis.add(item" + button.Name + ");");
	}
#>

<#+
	private void	createButton(Button button)
	{
		WriteLine("\t\tbutton" + button.Title + " = new Button(\"" + button.Title + "\");");
		WriteLine("\t\tthis.add(button" + button.Title + ");");
	}
#>

<#+
	private void	actionButton(Button button)
	{
		WriteLine("\t\tbutton" + button.Title + ".addActionListener(this);");
	}
#>

<#+
	private void	actionItem(Item item)
	{
		WriteLine("\t\titem" + item.Name + ".addActionListener(this);");
	}
#>

<#+
	private void	setActionPerformed(Window window)
	{
		bool	i;

		i = false;
		WriteLine("\tpublic void\tactionPerformed(ActionEvent ae)\n\t{\n\t\tObject o = ae.getSource();\n");
		foreach(Menu menu in window.Menu)
			foreach(Item item in menu.Item)
			{
				if (String.Equals(item.Type, "End"))
					WriteLine("\t\tif (o == item" + item.Name + ")\n\t\t\tSystem.exit(0);");
				else if (item.Type != "")
				{
					if (i)
						Write("\t\telse ");
					else
					{
						Write("\t\t");
						i = true;
					}
					WriteLine("if (o == item" + item.Name + ")\n\t\t\twindow" + item.Type + ".setVisible(true);");
				}
			}
		foreach(Button button in window.Button)
		{
			if (String.Equals(button.Type, "End"))
			{
				if (i)
					Write("\t\telse ");
				else
				{
					Write("\t\t");
					i = true;
				}
				WriteLine("if (o == button" + button.Title + ")\n\t\t\tSystem.exit(0);");
			}
			else if(button.Type != "")
			{
				if (i)
					Write("\t\telse ");
				else
				{
					Write("\t\t");
					i = true;
				}
				if (button.id == 0)
					WriteLine("if (o == button" + button.Title + ")\n\t\t\tframe" + button.Type + ".setVisible(true);");
				else
					WriteLine("if (o == button" + button.Title + ")\n\t\t\twindow" + button.Type + ".setVisible(true);");
			}
		}
		WriteLine("\t}");
	}
#>