//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Drawing.Design;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using VSShellInterop = global::Microsoft.VisualStudio.Shell.Interop;
using VSShell = global::Microsoft.VisualStudio.Shell;
using DslShell = global::Microsoft.VisualStudio.Modeling.Shell;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslModeling = global::Microsoft.VisualStudio.Modeling;

namespace UPM_IPS.RGRLLCAMSProyectoMDD
{
	/// <summary>
	/// This class implements the VS package that integrates this DSL into Visual Studio.
	/// </summary>
	[VSShell::PackageRegistration(RegisterUsing = VSShell::RegistrationMethod.Assembly, UseManagedResourcesOnly = true, AllowsBackgroundLoading = true)]
	[VSShell::ProvideToolWindow(typeof(RGRLLCAMSProyectoMDDExplorerToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tabbed, Orientation = VSShell::ToolWindowOrientation.Right, Window = "{3AE79031-E1BC-11D0-8F78-00A0C9110057}")]
	[VSShell::ProvideToolWindowVisibility(typeof(RGRLLCAMSProyectoMDDExplorerToolWindow), Constants.RGRLLCAMSProyectoMDDEditorFactoryId)]
	[VSShell::ProvideStaticToolboxGroup("@MainWindowToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.MainWindowToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.MainWindowToolboxTab",
					"@MainWindowToolToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.MainWindowToolToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"MainWindowTool", 
					"@MainWindowToolToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 0)]
	[VSShell::ProvideStaticToolboxGroup("@SecondaryWindowToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.SecondaryWindowToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.SecondaryWindowToolboxTab",
					"@SecondaryWindowToolToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.SecondaryWindowToolToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"SecondaryWindowTool", 
					"@SecondaryWindowToolToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 1)]
	[VSShell::ProvideStaticToolboxGroup("@ButtonToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.ButtonToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.ButtonToolboxTab",
					"@ButtonToolToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.ButtonToolToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ButtonTool", 
					"@ButtonToolToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 2)]
	[VSShell::ProvideStaticToolboxGroup("@MenuToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.MenuToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.MenuToolboxTab",
					"@MenuToolToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.MenuToolToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"MenuTool", 
					"@MenuToolToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 3)]
	[VSShell::ProvideStaticToolboxGroup("@ItemToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.ItemToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.ItemToolboxTab",
					"@ItemToolToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.ItemToolToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ItemTool", 
					"@ItemToolToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 4)]
	[VSShell::ProvideStaticToolboxGroup("@EndToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.EndToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.EndToolboxTab",
					"@EndToolToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.EndToolToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"EndTool", 
					"@EndToolToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 5)]
	[VSShell::ProvideStaticToolboxGroup("@EnlaceToolboxTab;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", "UPM_IPS.RGRLLCAMSProyectoMDD.EnlaceToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.EnlaceToolboxTab",
					"@EndButtonToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.EndButtonToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"EndButtonTool", 
					"@EndButtonToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 6)]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.EnlaceToolboxTab",
					"@EndItemToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.EndItemToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"EndItemTool", 
					"@EndItemToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 7)]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.EnlaceToolboxTab",
					"@MainSecondaryToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.MainSecondaryToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"MainSecondaryTools", 
					"@MainSecondaryToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 8)]
	[VSShell::ProvideStaticToolboxItem("UPM_IPS.RGRLLCAMSProyectoMDD.EnlaceToolboxTab",
					"@SecondarySecondaryToolboxItem;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					"UPM_IPS.RGRLLCAMSProyectoMDD.SecondarySecondaryToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"SecondarySecondaryTools", 
					"@SecondarySecondaryToolboxBitmap;UPM_IPS.RGRLLCAMSProyectoMDD.Dsl.dll", 
					0xff00ff,
					Index = 9)]
	[VSShell::ProvideEditorFactory(typeof(RGRLLCAMSProyectoMDDEditorFactory), 103, TrustLevel = VSShellInterop::__VSEDITORTRUSTLEVEL.ETL_AlwaysTrusted)]
	[VSShell::ProvideEditorExtension(typeof(RGRLLCAMSProyectoMDDEditorFactory), "." + Constants.DesignerFileExtension, 50)]
	[VSShell::ProvideEditorLogicalView(typeof(RGRLLCAMSProyectoMDDEditorFactory), "{7651A702-06E5-11D1-8EBD-00A0C90F26EA}")] // Designer logical view GUID i.e. VSConstants.LOGVIEWID_Designer
	[DslShell::ProvideRelatedFile("." + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.CSharpProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::ProvideRelatedFile("." + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.VisualBasicProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::RegisterAsDslToolsEditor]
	[global::System.Runtime.InteropServices.ComVisible(true)]
	[DslShell::ProvideBindingPath]
	[DslShell::ProvideXmlEditorChooserBlockSxSWithXmlEditor(@"RGRLLCAMSProyectoMDD", typeof(RGRLLCAMSProyectoMDDEditorFactory))]

	internal abstract partial class RGRLLCAMSProyectoMDDPackageBase : DslShell::AsyncModelingPackage
	{
		protected global::UPM_IPS.RGRLLCAMSProyectoMDD.RGRLLCAMSProyectoMDDToolboxHelper toolboxHelper;	
		
		/// <summary>
		/// Initialization method called by the package base class when this package is loaded.
		/// </summary>
		protected async override Task InitializeAsync(CancellationToken cancellationToken, IProgress<VSShell.ServiceProgressData> progress)
		{
			await base.InitializeAsync(cancellationToken, progress);

			// Register the editor factory used to create the DSL editor.
			this.RegisterEditorFactory(new RGRLLCAMSProyectoMDDEditorFactory(this));
			
			// Initialize the toolbox helper
			toolboxHelper = new global::UPM_IPS.RGRLLCAMSProyectoMDD.RGRLLCAMSProyectoMDDToolboxHelper(this);

			// Create the command set that handles menu commands provided by this package.
			RGRLLCAMSProyectoMDDCommandSet commandSet = new RGRLLCAMSProyectoMDDCommandSet(this);
			await commandSet.InitializeAsync(cancellationToken);
			
			// Create the command set that handles cut/copy/paste commands provided by this package.
			RGRLLCAMSProyectoMDDClipboardCommandSet clipboardCommandSet = new RGRLLCAMSProyectoMDDClipboardCommandSet(this);
			await clipboardCommandSet.InitializeAsync(cancellationToken);
			
			// Register the model explorer tool window for this DSL.
			this.AddToolWindow(typeof(RGRLLCAMSProyectoMDDExplorerToolWindow));

			if (cancellationToken.IsCancellationRequested)
			{
				return;
			}

			await JoinableTaskFactory.SwitchToMainThreadAsync();

			// Initialize Extension Registars
			// this is a partial method call
			this.InitializeExtensions();

			// Add dynamic toolbox items
			await this.SetupDynamicToolboxAsync(cancellationToken);
		}

		/// <summary>
		/// Partial method to initialize ExtensionRegistrars (if any) in the DslPackage
		/// </summary>
		partial void InitializeExtensions();
		
		/// <summary>
		/// Returns any dynamic tool items for the designer
		/// </summary>
		/// <remarks>The default implementation is to return the list of items from the generated toolbox helper.</remarks>
		protected override global::System.Collections.Generic.IList<DslDesign::ModelingToolboxItem> CreateToolboxItems()
		{
			try
			{
				Debug.Assert(toolboxHelper != null, "Toolbox helper is not initialized");
				return toolboxHelper.CreateToolboxItems();
			}
			catch (global::System.Exception e)
			{
				global::System.Diagnostics.Debug.Fail("Exception thrown during toolbox item creation.  This may result in Package Load Failure:\r\n\r\n" + e);
				throw;
			}
		}
		
		
		/// <summary>
		/// Given a toolbox item "unique ID" and a data format identifier, returns the content of
		/// the data format. 
		/// </summary>
		/// <param name="itemId">The unique ToolboxItem to retrieve data for</param>
		/// <param name="format">The desired format of the resulting data</param>
		protected override object GetToolboxItemData(string itemId, DataFormats.Format format)
		{
			Debug.Assert(toolboxHelper != null, "Toolbox helper is not initialized");
		
			// Retrieve the specified ToolboxItem from the DSL
			return toolboxHelper.GetToolboxItemData(itemId, format);
		}

		public override VSShellInterop::IVsAsyncToolWindowFactory GetAsyncToolWindowFactory(Guid toolWindowType)
		{
			if (toolWindowType == typeof(RGRLLCAMSProyectoMDDExplorerToolWindow).GUID)
			{
				return this;
			}

			return base.GetAsyncToolWindowFactory(toolWindowType);
		}
	}
}

//
// Package attributes which may need to change are placed on the partial class below, rather than in the main include file.
//
namespace UPM_IPS.RGRLLCAMSProyectoMDD
{
	/// <summary>
	/// Double-derived class to allow easier code customization.
	/// </summary>
	[VSShell::ProvideMenuResource("1000.ctmenu", 1)]
	[VSShell::ProvideToolboxItems(1)]
	[global::Microsoft.VisualStudio.TextTemplating.VSHost.ProvideDirectiveProcessor(typeof(global::UPM_IPS.RGRLLCAMSProyectoMDD.RGRLLCAMSProyectoMDDDirectiveProcessor), global::UPM_IPS.RGRLLCAMSProyectoMDD.RGRLLCAMSProyectoMDDDirectiveProcessor.RGRLLCAMSProyectoMDDDirectiveProcessorName, "A directive processor that provides access to RGRLLCAMSProyectoMDD files")]
	[global::System.Runtime.InteropServices.Guid(Constants.RGRLLCAMSProyectoMDDPackageId)]
	internal sealed partial class RGRLLCAMSProyectoMDDPackage : RGRLLCAMSProyectoMDDPackageBase
	{
	}
}